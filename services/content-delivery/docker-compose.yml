version: '3.8'

services:
  # Content Delivery Service
  content-delivery:
    build: .
    ports:
      - "8084:8084"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/content_delivery
      - UPSTASH_REDIS_REST_URL=redis:6379
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET=content-delivery
      - S3_ENDPOINT=http://minio:9000
      - JWT_SECRET=your_jwt_secret_here
      - API_KEY=your_service_api_key_here
      - ENV=development
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - content-delivery

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=content_delivery
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - content-delivery

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - content-delivery

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - content-delivery

volumes:
  postgres_data:
  minio_data:

networks:
  content-delivery:
    driver: bridge
