# Modex Platform Helm Values

global:
  environment: development
  namespace: modex-platform
  imageRegistry: devmodexacr.azurecr.io
  imagePullPolicy: Always
  
replicaCount: 2

image:
  tag: latest

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: api.modex.platform
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: modex-platform-tls
      hosts:
        - api.modex.platform

# Service configurations
services:
  apiGateway:
    enabled: true
    port: 3000
    image: api-gateway
    replicas: 3
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi" 
        cpu: "500m"
    env:
      NODE_ENV: production
      PORT: 3000
      JWT_SECRET: "your-jwt-secret"
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100

  courseManagement:
    enabled: true
    port: 3002
    image: course-management
    replicas: 2
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"
    env:
      GIN_MODE: release
      PORT: 3002

  enrollment:
    enabled: true
    port: 3003
    image: enrollment
    replicas: 2
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    env:
      NODE_ENV: production
      PORT: 3003

  assessment:
    enabled: true
    port: 3004
    image: assessment
    replicas: 2
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"
    env:
      GIN_MODE: release
      PORT: 3004

  payment:
    enabled: true
    port: 3005
    image: payment
    replicas: 2
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    env:
      NODE_ENV: production
      PORT: 3005
      STRIPE_API_VERSION: "2023-10-16"

  analytics:
    enabled: true
    port: 3006
    image: analytics
    replicas: 2
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    env:
      NODE_ENV: production
      PORT: 3006

# External dependencies
postgresql:
  enabled: false # Using Azure PostgreSQL Flexible Server
  external:
    host: ""  # Set via Terraform output
    port: 5432
    database: modex
    username: modexadmin
    existingSecret: postgres-credentials
    existingSecretPasswordKey: password

redis:
  enabled: false # Using Azure Cache for Redis
  external:
    host: ""  # Set via Terraform output
    port: 6380
    existingSecret: redis-credentials
    existingSecretPasswordKey: password

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
  prometheusRule:
    enabled: true

# Autoscaling
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Security
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

# Health checks
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
